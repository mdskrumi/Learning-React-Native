{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mdskrumi/Personal/Projects/Learning-React-Native/my-app/src/screens/SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar constants = {\n  CHANGE_RED: 'CHANGE_RED',\n  CHANGE_GREEN: 'CHANGE_GREEN',\n  CHANGE_BLUE: 'CHANGE_BLUE'\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case constants.CHANGE_RED:\n      return state.red + action.payload < 256 && state.red + action.payload >= 0 ? _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      }) : state;\n\n    case constants.CHANGE_GREEN:\n      return state.green + action.payload < 256 && state.green + action.payload >= 0 ? _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      }) : state;\n\n    case constants.CHANGE_BLUE:\n      return state.blue + action.payload < 256 && state.blue + action.payload >= 0 ? _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      }) : state;\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(ColorCounter, {\n    title: 'RED',\n    incText: \"Increase Red\",\n    decText: 'Decrease Red',\n    increment: function increment() {\n      dispatch({\n        type: constants.CHANGE_RED,\n        payload: 15\n      });\n    },\n    decrement: function decrement() {\n      dispatch({\n        type: constants.CHANGE_RED,\n        payload: -15\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    title: 'Green',\n    incText: \"Increase Green\",\n    decText: 'Decrease Green',\n    increment: function increment() {\n      dispatch({\n        type: constants.CHANGE_GREEN,\n        payload: 15\n      });\n    },\n    decrement: function decrement() {\n      dispatch({\n        type: constants.CHANGE_GREEN,\n        payload: -15\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    title: 'BLUE',\n    incText: \"Increase Blue\",\n    decText: 'Decrease Blue',\n    increment: function increment() {\n      dispatch({\n        type: constants.CHANGE_BLUE,\n        payload: 15\n      });\n    },\n    decrement: function decrement() {\n      dispatch({\n        type: constants.CHANGE_BLUE,\n        payload: -15\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 100,\n      height: 100,\n      backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \" Red: \", red, \", Green: \", green, \", Blue: \", blue, \" \")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 20,\n    borderStyle: 'solid'\n  }\n});\nexport default SquareScreen;","map":{"version":3,"sources":["/home/mdskrumi/Personal/Projects/Learning-React-Native/my-app/src/screens/SquareScreen.js"],"names":["React","useState","useReducer","ColorCounter","constants","CHANGE_RED","CHANGE_GREEN","CHANGE_BLUE","reducer","state","action","type","red","payload","green","blue","SquareScreen","dispatch","styles","container","width","height","backgroundColor","StyleSheet","create","display","flexDirection","alignItems","padding","borderStyle"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\n\nimport ColorCounter from '../components/ColorCounter';\n\n\nconst constants = {\n    CHANGE_RED: 'CHANGE_RED',\n    CHANGE_GREEN: 'CHANGE_GREEN',\n    CHANGE_BLUE: 'CHANGE_BLUE',\n}\n\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case constants.CHANGE_RED:\n            return (state.red + action.payload < 256 && state.red + action.payload >= 0)\n                ? { ...state, red: state.red + action.payload }\n                : state;\n        case constants.CHANGE_GREEN:\n            return (state.green + action.payload < 256 && state.green + action.payload >= 0)\n                ? { ...state, green: state.green + action.payload }\n                : state;\n        case constants.CHANGE_BLUE:\n            return (state.blue + action.payload < 256 && state.blue + action.payload >= 0)\n                ? { ...state, blue: state.blue + action.payload }\n                : state;\n        default:\n            return state;\n\n    }\n}\n\nconst SquareScreen = () => {\n\n    // const [red, setRed] = useState(0);\n    // const [green, setGreen] = useState(0);\n    // const [blue, setBlue] = useState(0);\n\n    const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\n    const { red, green, blue } = state;\n\n    return (\n        <View>\n            <ColorCounter\n                title={'RED'}\n                incText={\"Increase Red\"}\n                decText={'Decrease Red'}\n                increment={() => { dispatch({ type: constants.CHANGE_RED, payload: 15 }) }}\n                decrement={() => { dispatch({ type: constants.CHANGE_RED, payload: -15 }) }}\n            />\n            <ColorCounter\n                title={'Green'}\n                incText={\"Increase Green\"}\n                decText={'Decrease Green'}\n                increment={() => { dispatch({ type: constants.CHANGE_GREEN, payload: 15 }) }}\n                decrement={() => { dispatch({ type: constants.CHANGE_GREEN, payload: -15 }) }}\n            />\n            <ColorCounter\n                title={'BLUE'}\n                incText={\"Increase Blue\"}\n                decText={'Decrease Blue'}\n                increment={() => { dispatch({ type: constants.CHANGE_BLUE, payload: 15 }) }}\n                decrement={() => { dispatch({ type: constants.CHANGE_BLUE, payload: -15 }) }}\n            />\n\n            <View style={styles.container}>\n                <View style={{ width: 100, height: 100, backgroundColor: `rgb(${red},${green},${blue})` }} />\n                <Text> Red: {red}, Green: {green}, Blue: {blue} </Text>\n            </View>\n\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 20,\n        borderStyle: 'solid',\n\n    }\n})\n\nexport default SquareScreen;"]},"metadata":{},"sourceType":"module"}